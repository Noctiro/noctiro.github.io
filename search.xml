<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RAMMap | 轻松解决Windows内存过高的工具</title>
      <link href="//post/eb15f109af59.html"/>
      <url>//post/eb15f109af59.html</url>
      
        <content type="html"><![CDATA[<p>Windows的内存占用有新的解决方案了，本文推荐的工具可以清除Windows虚拟内存，本人测试效果真的好</p><details class="toggle" ><summary class="toggle-button" style="">Microsoft文档</summary><div class="toggle-content"><p><a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/rammap">https://docs.microsoft.com/zh-cn/sysinternals/downloads/rammap</a></p></div></details><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><ul><li>链接 <a href="https://download.sysinternals.com/files/RAMMap.zip">download.sysinternals.com&#x2F;files&#x2F;RAMMap.zip</a></li></ul><h1 id="优化内存"><a href="#优化内存" class="headerlink" title="优化内存"></a>优化内存</h1><ul><li>双击启动软件</li><li>打开 <code>Empty</code> 菜单栏，把所有选项都点一遍</li><li>关闭软件(软件关闭不会影响优化)</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pixiv图片反代搭建</title>
      <link href="//post/b1a99e3babd3.html"/>
      <url>//post/b1a99e3babd3.html</url>
      
        <content type="html"><![CDATA[<ul><li>进入 <code>CloudFlare Workers </code>(<a href="https://workers.cloudflare.com/">https://workers.cloudflare.com/</a>)</li><li>点击 <code>创建服务</code></li><li>修改 <code>服务名称</code> 这个将会决定到你网站的域名，<strong>并记住你设置的网址</strong></li><li>最后点击 <code>创建服务</code> 来创建 Workers</li><li>在接下来的网页中点击 <code>快速编辑</code>，进入编辑界面</li><li>在左侧代码框中，把所有代码删掉，替换成以下内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(&#x27;fetch&#x27;, event =&gt; &#123;</span><br><span class="line">    let url = new URL(event.request.url);</span><br><span class="line">    url.hostname = &#x27;i.pximg.net&#x27;;   </span><br><span class="line">    let request = new Request(url, event.request);</span><br><span class="line">    event.respondWith(</span><br><span class="line">        fetch(request, &#123;</span><br><span class="line">            headers:&#123;</span><br><span class="line">                &#x27;Referer&#x27;: &#x27;https://www.pixiv.net&#x27;,</span><br><span class="line">                &#x27;User-Agent&#x27;:&#x27;Cloudflare Workers&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>点击 <code>保存并部署</code>，就完成了</li><li>你的反代地址就是你一开始设置的名字</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 科学上网 </tag>
            
            <tag> CloudFlare Workers </tag>
            
            <tag> Pixiv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PixivView | 偏向于手机的网页镜像搭建</title>
      <link href="//post/a60f2b09931d.html"/>
      <url>//post/a60f2b09931d.html</url>
      
        <content type="html"><![CDATA[<details class="toggle" ><summary class="toggle-button" style="">Github 开源地址</summary><div class="toggle-content"><p><a href="https://github.com/journey-ad/pixiv-viewer/"><img src="https://github-readme-stats.vercel.app/api/pin/?username=journey-ad&repo=pixiv-viewer&show_owner=true" alt="pixiv-viewer"></a><br><a href="https://github.com/journey-ad/pixiv-viewer/">https://github.com/journey-ad/pixiv-viewer/</a></p></div></details><h1 id="复制仓库"><a href="#复制仓库" class="headerlink" title="复制仓库"></a>复制仓库</h1><p>请先复制仓库到你要部署的地方</p><p><a href="https://github.com/journey-ad/pixiv-viewer/">https://github.com/journey-ad/pixiv-viewer/</a></p><h1 id="修改借口"><a href="#修改借口" class="headerlink" title="修改借口"></a>修改借口</h1><h2 id="图片反代"><a href="#图片反代" class="headerlink" title="图片反代"></a>图片反代</h2><p><a class="btn-beautify blue larger link-instanted" href="/post/b1a99e3babd3.html" title="请前往 [Pixiv图片反代搭建] 页面查看"><i class="far fa-hand-point-right"></i><span>请前往 [Pixiv图片反代搭建] 页面查看</span></a></p><ul><li>接着，打开 <code>/src/api/index.js</code> 的第19行,修改为如下内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let result = url.replace(/i.pximg.net/g, &#x27;你的部署网址&#x27;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="部署API-HibiAPI"><a href="#部署API-HibiAPI" class="headerlink" title="部署API (HibiAPI)"></a>部署API (HibiAPI)</h2><details class="toggle" ><summary class="toggle-button" style="">Github 开源地址</summary><div class="toggle-content"><p><a href="https://github.com/mixmoe/HibiAPI">https://github.com/mixmoe/HibiAPI</a></p></div></details><div class="note danger flat"><p>我在这一步遇到困难，如果愿意帮助我的欢迎联系我，谢谢<br>QQ: 1665807109</p></div><blockquote><p>未完待续</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 科学上网 </tag>
            
            <tag> Pixiv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PixivNow | 第三方镜像站搭建</title>
      <link href="//post/e4d3db194f00.html"/>
      <url>//post/e4d3db194f00.html</url>
      
        <content type="html"><![CDATA[<p>此教程介绍的是P站(是Pixiv，不是某个Po**hub)第三方镜像站的搭建教程，我自己本人也在摸索中，由于学业紧，会不定时更新</p><details class="toggle" ><summary class="toggle-button" style="">Github 开源地址</summary><div class="toggle-content"><p><a href="https://github.com/FreeNowOrg/PixivNow"><img src="https://github-readme-stats.vercel.app/api/pin/?username=FreeNowOrg&repo=PixivNow&show_owner=true" alt="PixivNow"></a><br><a href="https://github.com/FreeNowOrg/PixivNow">https://github.com/FreeNowOrg/PixivNow</a></p></div></details><h1 id="搭建成品"><a href="#搭建成品" class="headerlink" title="搭建成品"></a>搭建成品</h1><p>官方成品 <a href="https://pixiv.js.org/">https://pixiv.js.org</a></p><p>我的成品 <a href="https://pixiv.obcbo.tk/">https://pixiv.obcbo.tk</a></p><h1 id="复制仓库"><a href="#复制仓库" class="headerlink" title="复制仓库"></a>复制仓库</h1><ol><li>打开 <a href="https://vercel.com/dashboard">Vercel管理网页</a></li><li>点击 <kbd><i class="fas fa-plus"></i> New Project</kbd></li><li>点击 <code>Import Third-Party Git Repository →</code></li><li>输入 <code>https://github.com/FreeNowOrg/PixivNow</code> 并点击 <code>Continue</code></li><li><strong>(可选)</strong> 在接下来的界面中，输入你想要的仓库名(REPOSITORY NAME) 以及等等你想要与众不同的东西</li><li>点击 <code>Create</code>，稍等一小会，你的镜像站就大功告成了</li></ol><h1 id="部署修改"><a href="#部署修改" class="headerlink" title="部署修改"></a>部署修改</h1><ul><li>打开你vercel的PixivNow项目，点击顶栏的 <code>Settings</code> 选项卡</li><li>点击左侧栏中的 <code>General</code> 选项 ， 来进入 <code>Project Settings</code></li><li>在<code> Build &amp; Development Settings</code> 中<ul><li>将 <code>FRAMEWORK PRESET</code> 改为 <code>Vue.js</code></li><li>打开 <code>BUILD COMMAND</code> 的 <code>OVERRIDE</code> 开关，并将内容编辑为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br></pre></td></tr></table></figure></li><li>打开 <code>DEVELOPMENT COMMAND</code> 的 <code>OVERRIDE</code> 开关，并将内容编辑为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vite --port $PORT</span><br></pre></td></tr></table></figure></li></ul></li><li>点击顶栏的 <code>Deployments</code> 选项卡</li><li>随便点一个部署记录的 <kbd><i class="fas fa-ellipsis-v"></i></kbd> 按钮</li><li>点击 <code>Redeploy</code></li><li>再点击弹窗底下的 <code>REDEPLOY</code> 按钮来重新部署</li></ul><h1 id="修改接口"><a href="#修改接口" class="headerlink" title="修改接口"></a>修改接口</h1><h2 id="搭建反代"><a href="#搭建反代" class="headerlink" title="搭建反代"></a>搭建反代</h2><p><a class="btn-beautify blue larger link-instanted" href="/post/b1a99e3babd3.html" title="请前往 [Pixiv图片反代搭建] 页面查看"><i class="far fa-hand-point-right"></i><span>请前往 [Pixiv图片反代搭建] 页面查看</span></a></p><h2 id="替换接口"><a href="#替换接口" class="headerlink" title="替换接口"></a>替换接口</h2><ul><li>打开 <code>/vercel.json</code>，第15行的链接换为你刚刚搭建的反代链接</li><li>打开 <code>/api/image.ts</code>，第17行的链接换为你刚刚搭建的反代链接</li><li>打开 <code>/src/components/AuthorCard.vue</code>，第29行的链接换为你部署的链接</li></ul><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>搭建完成！你可以去访问了！这个镜像站支持登录，登录后可以看到更多内容（你懂的）</p><p>虽然有访问次数数据限制，但是不是非常多人用，正常还是很够的</p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 科学上网 </tag>
            
            <tag> Pixiv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly随机封面图</title>
      <link href="//post/110db35fe8a5.html"/>
      <url>//post/110db35fe8a5.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>终于修好了(绝对不是因为咕咕咕) -2023&#x2F;1&#x2F;11</p></div><p>搞这个随机封面图已经快两周了，中间断断续续缝缝补补，现在我觉得差不多可以发表了</p><h1 id="新建JS文件"><a href="#新建JS文件" class="headerlink" title="新建JS文件"></a>新建JS文件</h1><ul><li>在 <code>source</code> 文件夹下新建 <code>js</code> 目录,并在里面新建 <code>rphoto.js</code>（确保没有与<strong>当前文件夹里的文件</strong>和<strong>主题相对应文件夹里面的文件名字</strong>冲突）</li><li>以下是 <code>rphoto.js</code> 的内容</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">obcboPic</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> backPicture = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;page-header&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (backPicture.<span class="property">style</span>.<span class="property">backgroundImage</span> == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> background_urls = [</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/yX7lju25TbMVLnS.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/AyD3mTLvPa6YxN4.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/2ANgyCud5mf9SLX.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/ijTcD4sNQGtI7aO.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/lZfxzh2w83Y7UAH.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/7fWJp48Dm6kV3tA.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/Bt7njKX3pckosEA.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/YfIERQGwPyWpF95.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/oZUCqWKr2w1DO35.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/2n34ZH1LEsWgxJI.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/anU8Pp4syA1DfcJ.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/TbcZ3pC4ev7MBKS.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/WpYuKRmxjNkzt8a.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/PHR7bGNJgpS1xrB.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/eJqjtFW329GiLQD.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/MgK18FvA9rc7ipV.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/E4br3gUDTLVKp8o.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/WDzVHu9MgtC1fQ4.jpg&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://s2.loli.net/2022/01/29/wPavu8hCZL5VXmN.jpg&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">        <span class="keyword">var</span> url = background_urls[<span class="title class_">Math</span>.<span class="title function_">floor</span>((<span class="title class_">Math</span>.<span class="title function_">random</span>() * background_urls.<span class="property">length</span>))];</span><br><span class="line">        <span class="keyword">var</span> urlPhoto = (<span class="string">&#x27;background-image:url(&#x27;</span> + url + <span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;BackGround URL:&quot;</span> + url);</span><br><span class="line">        backPicture.<span class="title function_">setAttribute</span>(<span class="string">&quot;style&quot;</span>, urlPhoto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="修改-config-butterfly-yml"><a href="#修改-config-butterfly-yml" class="headerlink" title="修改 _config.butterfly.yml"></a>修改 _config.butterfly.yml</h1><ol><li>将 <code>default_top_img</code> 内容改为 <code>url</code></li><li>在 <code>inject</code> 的 <code>bottom</code> 中 (大约823行左右),添加以下内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- &lt;script src=&quot;/js/rphoto.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">- &lt;script data-pjax&gt;obcboPic()&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ的XML卡片搜集分享</title>
      <link href="//post/ec7fc0485dd4.html"/>
      <url>//post/ec7fc0485dd4.html</url>
      
        <content type="html"><![CDATA[<h2 id="群公告"><a href="#群公告" class="headerlink" title="群公告"></a>群公告</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;app&quot;:&quot;com.tencent.mannounce&quot;,&quot;desc&quot;:&quot;群公告&quot;,&quot;view&quot;:&quot;main&quot;,&quot;ver&quot;:&quot;1.0.0.43&quot;,&quot;prompt&quot;:&quot;[群公告]xdm此群即将解散，快去加新群....诶是假的&quot;,&quot;appID&quot;:&quot;&quot;,&quot;sourceName&quot;:&quot;&quot;,&quot;actionData&quot;:&quot;&quot;,&quot;actionData_A&quot;:&quot;&quot;,&quot;sourceUrl&quot;:&quot;&quot;,&quot;meta&quot;:&#123;&quot;mannounce&quot;:&#123;&quot;cr&quot;:1,&quot;encode&quot;:1,&quot;fid&quot;:&quot;1360643600000000b2170c62911c0700&quot;,&quot;gc&quot;:&quot;912547859&quot;,&quot;sign&quot;:&quot;d62e2c16b3365b65089cb4ce191f7be9&quot;,&quot;text&quot;:&quot;5Yid5aKo5paX572X5Zue5b2S5LqG5YWE5byf5LusCmlw5LiN5Y+YCuWlveWlveS6q+WPlw==&quot;,&quot;title&quot;:&quot;576k5YWs5ZGK&quot;,&quot;tw&quot;:0,&quot;uin&quot;:&quot;577474096&quot;&#125;&#125;,&quot;config&quot;:&#123;&quot;ctime&quot;:1644959666,&quot;forward&quot;:0,&quot;token&quot;:&quot;dbdaf93aab1ab1a966922c7c4cba5733&quot;&#125;,&quot;text&quot;:&quot;&quot;,&quot;sourceAd&quot;:&quot;&quot;,&quot;extra&quot;:&quot;&#123;\&quot;app_type\&quot;:1,\&quot;appid\&quot;:1101236949,\&quot;uin\&quot;:577474096&#125;&quot;&#125;</span><br></pre></td></tr></table></figure><h2 id="群签到"><a href="#群签到" class="headerlink" title="群签到"></a>群签到</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;app&quot;:&quot;com.tencent.qq.checkin&quot;,&quot;desc&quot;:&quot;群签到&quot;,&quot;view&quot;:&quot;checkIn&quot;,&quot;ver&quot;:&quot;1.0.0.25&quot;,&quot;prompt&quot;:&quot;群签到&quot;,&quot;appID&quot;:&quot;&quot;,&quot;sourceName&quot;:&quot;&quot;,&quot;actionData&quot;:&quot;&quot;,&quot;actionData_A&quot;:&quot;&quot;,&quot;sourceUrl&quot;:&quot;&quot;,&quot;meta&quot;:&#123;&quot;checkInData&quot;:&#123;&quot;address&quot;:&quot;&quot;,&quot;cover&quot;:&#123;&quot;height&quot;:0,&quot;url&quot;:&quot;https:\/\/pub.idqqimg.com\/pc\/misc\/files\/20200127\/96ea43dcb067f59459537d9477c7bcd4.png&quot;,&quot;width&quot;:0&#125;,&quot;desc&quot;:&quot;坚持戴口罩&quot;,&quot;hostuin&quot;:68848516,&quot;id&quot;:&quot;union_16449602450068848516912547859&quot;,&quot;media_type&quot;:0,&quot;qunid&quot;:&quot;912547859&quot;,&quot;rank&quot;:1,&quot;skip_to&quot;:1,&quot;time&quot;:0,&quot;url&quot;:&quot;mqqapi:\/\/microapp\/open?appid=1108164955&amp;path=pages%2Fchecklist%2Fchecklist&amp;extraData=912547859%7Cunion_16449602450068848516912547859&quot;,&quot;vid&quot;:&quot;&quot;&#125;&#125;,&quot;config&quot;:&#123;&quot;ctime&quot;:1644960245,&quot;forward&quot;:0,&quot;showSender&quot;:1,&quot;token&quot;:&quot;1ced0518122acd5ea5cf7eb59086b282&quot;&#125;,&quot;text&quot;:&quot;&quot;,&quot;sourceAd&quot;:&quot;&quot;,&quot;extra&quot;:&quot;&#123;\&quot;app_type\&quot;:1,\&quot;appid\&quot;:101912871,\&quot;uin\&quot;:68848516&#125;&quot;&#125;</span><br></pre></td></tr></table></figure><h2 id="转发消息"><a href="#转发消息" class="headerlink" title="转发消息"></a>转发消息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27; standalone=&#x27;yes&#x27; ?&gt;&lt;msg serviceID=&quot;35&quot; templateID=&quot;1&quot; action=&quot;viewMultiMsg&quot; brief=&quot;[聊天记录]&quot; m_resid=&quot;zZQk2uIn56zh2kRrOnAFGn1iMYdHRXm1ogP94tIoJMMqXIFycRFcm2jwM1bs7PcG&quot; m_fileName=&quot;7065166412246537516&quot; tSum=&quot;7&quot; sourceMsgId=&quot;0&quot; url=&quot;&quot; flag=&quot;3&quot; adverSign=&quot;0&quot; multiMsgFlag=&quot;0&quot;&gt;&lt;item layout=&quot;1&quot; advertiser_id=&quot;0&quot; aid=&quot;0&quot;&gt;&lt;title size=&quot;34&quot; maxLines=&quot;2&quot; lineSpace=&quot;12&quot;&gt;Tokit的聊天记录&lt;/title&gt;&lt;title size=&quot;26&quot; color=&quot;#777777&quot; maxLines=&quot;2&quot; lineSpace=&quot;12&quot;&gt;Tokit:  芜湖&lt;/title&gt;&lt;title size=&quot;26&quot; color=&quot;#777777&quot; maxLines=&quot;2&quot; lineSpace=&quot;12&quot;&gt;Tokit:  这个是转发消息xml&lt;/title&gt;&lt;title size=&quot;26&quot; color=&quot;#777777&quot; maxLines=&quot;2&quot; lineSpace=&quot;12&quot;&gt;Tokit:  可以拿去整你的朋友~&lt;/title&gt;&lt;title size=&quot;26&quot; color=&quot;#777777&quot; maxLines=&quot;2&quot; lineSpace=&quot;12&quot;&gt;Tokit:  [动画表情]&lt;/title&gt;&lt;hr hidden=&quot;false&quot; style=&quot;0&quot; /&gt;&lt;summary size=&quot;26&quot; color=&quot;#777777&quot;&gt;查看7条转发消息&lt;/summary&gt;&lt;/item&gt;&lt;source name=&quot;聊天记录&quot; icon=&quot;&quot; action=&quot;&quot; appid=&quot;-1&quot; /&gt;&lt;/msg&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> QQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jsproxy | 科学上网新方式</title>
      <link href="//post/e148ad03aa40.html"/>
      <url>//post/e148ad03aa40.html</url>
      
        <content type="html"><![CDATA[<p>大明鼎鼎的cloudflare推出了几乎免费的无服务器函数(免费额度: 10万请求&#x2F;每天)，搭配上Jsproxy就可以免费科学上网了(白嫖万岁)</p><details class="toggle" ><summary class="toggle-button" style="">Github 开源地址</summary><div class="toggle-content"><p><a href="https://github.com/EtherDream/jsproxy"><img src="https://github-readme-stats.vercel.app/api/pin/?username=EtherDream&repo=jsproxy&show_owner=true" alt="Jsproxy"></a><br><a href="https://github.com/EtherDream/jsproxy">https://github.com/EtherDream/jsproxy</a></p></div></details><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p>直接上效果好吧</p><div class="fj-gallery"><p><img src="https://s2.loli.net/2022/03/15/pX6bnFasQjKP5lh.png"></p>          </div><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><details class="toggle" ><summary class="toggle-button" style="">前提条件</summary><div class="toggle-content"><p>确保你已注册和登录</p><p><strong>快捷跳转</strong><br>注册: <a href="https://dash.cloudflare.com/sign-up">https://dash.cloudflare.com/sign-up</a><br>登录: <a href="https://dash.cloudflare.com/login">https://dash.cloudflare.com/login</a></p></div></details><h2 id="进入Worker服务"><a href="#进入Worker服务" class="headerlink" title="进入Worker服务"></a>进入Worker服务</h2><ul><li>登录后点击侧边栏上的<code>Worker选项</code>(<a href="https://workers.cloudflare.com/">https://workers.cloudflare.com/</a>)</li><li>点击 <code>创建服务</code></li><li>修改 <code>服务名称</code> 这个将会决定到你网站的域名，<strong>并记住你设置的网址</strong></li><li>最后点击 <code>创建服务</code></li></ul><h2 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h2><ul><li>进入<a href="https://github.com/rawchen/jsproxy/blob/master/cf-worker/index.js">https://github.com/rawchen/jsproxy/blob/master/cf-worker/index.js</a>，复制全部源码</li><li>在Cloudflare的Worker服务中，点击 <code>快速编辑</code> 进入编辑界面</li><li>在左侧代码框中，把所有代码删掉，替换成刚才复制的内容</li><li>点击 <code>保存并部署</code></li></ul><h1 id="更多-可选"><a href="#更多-可选" class="headerlink" title="更多 (可选)"></a>更多 (可选)</h1><h2 id="计费"><a href="#计费" class="headerlink" title="计费"></a>计费</h2><p>后退到 <code>overview</code> 页面可参看使用情况。免费版每天有 10 万次免费请求，对于个人通常足够。</p><p>如果不够用，可注册多个 Worker，在 <code>conf.js</code> 中配置多线路负载均衡。或者升级到 $5 的高级版本，每月可用 1000 万次请求（超出部分 $0.5&#x2F;百万次请求）。</p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>默认情况下，静态资源从 <code>https://etherdream.github.io/jsproxy</code> 反向代理，可通过代码中 <code>ASSET_URL</code> 配置，从而可使用自定义的 <code>conf.js</code> 配置。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>恭喜你，搭建成功了</p><p>现在你可以去访问你的网站，看看不一样的互联网 <strong>(记得遵守法律法规, 你人还是在中国)</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 科学上网 </tag>
            
            <tag> CloudFlare Workers </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastGithub | 解决大陆地区访问Github的问题</title>
      <link href="//post/a62f85eb7d8d.html"/>
      <url>//post/a62f85eb7d8d.html</url>
      
        <content type="html"><![CDATA[<p>Github加速神器，解决Github打不开、用户头像无法加载、Releases无法上传下载、git-clone、git-pull、git-push失败等问题</p><details class="toggle" ><summary class="toggle-button" style="">Github 开源地址</summary><div class="toggle-content"><p>Github开源地址<br><a href="https://github.com/dotnetcore/FastGithub"><img src="https://github-readme-stats.vercel.app/api/pin/?username=dotnetcore&repo=FastGithub&show_owner=true" alt="FastGithub"></a><br><a href="https://github.com/dotnetcore/FastGithub">https://github.com/dotnetcore/FastGithub</a></p></div></details><div class="note info flat"><p>官方指南 <a href="https://doc.fastgit.org/">https://doc.fastgit.org/</a></p></div><div class="note warning flat"><p>FastGithub暂时不支持超过 2GiB 的仓库的 <code>clone</code><br>请参阅 <a href="https://github.com/FastGitORG/nginx-conf/issues/14">https://github.com/FastGitORG/nginx-conf/issues/14</a> 与 <a href="https://github.com/FastGitORG/nginx-conf/commit/61a41bc0bbb012fc9a6e54b198a10874eeaf9309">https://github.com/FastGitORG/nginx-conf/commit/61a41bc0bbb012fc9a6e54b198a10874eeaf9309</a></p></div><h1 id="功能对比"><a href="#功能对比" class="headerlink" title="功能对比"></a>功能对比</h1><table><thead><tr><th>方案</th><th>合法性</th><th>可靠性</th><th>完整性</th><th>共享性</th><th>无服务器</th><th>免费</th></tr></thead><tbody><tr><td>FastGithub</td><td>YES</td><td>YES</td><td>YES</td><td>YES</td><td>YES</td><td>YES</td></tr><tr><td>hosts文件</td><td>YES</td><td>NO</td><td>NO</td><td>NO</td><td>YES</td><td>YES</td></tr><tr><td>vpn代理</td><td>NO</td><td>YES</td><td>YES</td><td>NO</td><td>NO</td><td>NO</td></tr></tbody></table><h1 id="下载程序"><a href="#下载程序" class="headerlink" title="下载程序"></a>下载程序</h1><ul><li><p><a href="https://github.com/dotnetcore/fastgithub/releases">Github-release</a></p></li><li><p>官方Q群</p><ul><li><a href="https://qm.qq.com/cgi-bin/qm/qr?k=cx_MgEIvoo1EMkrKg5tXz8vMdtPap3Rw&jump_from=webapi">307306673</a></li><li><a href="https://qm.qq.com/cgi-bin/qm/qr?k=6BBJ1nrJwe1o1E4-NJfwSOP-C4sMGc4q&jump_from=webapi">742376932</a></li><li><a href="https://jq.qq.com/?_wv=1027&k=1YpGW564">597131950</a></li></ul></li></ul><h1 id="程序使用方法"><a href="#程序使用方法" class="headerlink" title="程序使用方法"></a>程序使用方法</h1><h2 id="Windows-x64"><a href="#Windows-x64" class="headerlink" title="Windows-x64"></a>Windows-x64</h2><ul><li>直接使用 双击运行FastGithub.UI.exe</li><li>使用服务<ul><li><code>fastgithub.exe start</code><br>以windows服务安装并启动</li><li><code>fastgithub.exe stop</code><br>以windows服务卸载并删除</li></ul></li></ul><h2 id="Linux-x64"><a href="#Linux-x64" class="headerlink" title="Linux-x64"></a>Linux-x64</h2><ul><li>直接使用 <ul><li>在终端执行<code>sudo ./fastgithub</code></li><li>设置系统自动代理为<code>http://127.0.0.1:38457</code>，或手动代理http&#x2F;https为<code>127.0.0.1:38457</code></li></ul></li><li>使用服务<ul><li><code>sudo ./fastgithub start</code><br>以systemd服务安装并启动</li><li><code>sudo ./fastgithub stop</code><br>以systemd服务卸载并删除</li><li>设置系统自动代理为<code>http://127.0.0.1:38457</code>，或手动代理http&#x2F;https为<code>127.0.0.1:38457</code></li></ul></li></ul><h2 id="MacOS-x64"><a href="#MacOS-x64" class="headerlink" title="MacOS-x64"></a>MacOS-x64</h2><ul><li>详见 <a href="https://github.com/dotnetcore/FastGithub/blob/master/MacOSXConfig.md">https://github.com/dotnetcore/FastGithub/blob/master/MacOSXConfig.md</a></li></ul><h1 id="花式用法"><a href="#花式用法" class="headerlink" title="花式用法"></a>花式用法</h1><p>我们可以在访问Github时把Github的域名换成FastGithub的镜像</p><blockquote><p>这种方法不需要安装软件</p></blockquote><h2 id="反代列表"><a href="#反代列表" class="headerlink" title="反代列表"></a>反代列表</h2><p>使用时，直接替换即可</p><table><thead><tr><th>站源</th><th>地址</th><th>缓存</th></tr></thead><tbody><tr><td>github.com</td><td>hub.fastgit.org</td><td>无</td></tr><tr><td>raw.githubusercontent.com</td><td>raw.fastgit.org</td><td>无</td></tr><tr><td>github.githubassets.com</td><td>assets.fastgit.org</td><td>无</td></tr><tr><td>customer-stories-feed.github.com</td><td>customer-stories-feed.fastgit.org</td><td>480 分钟</td></tr><tr><td>Github Download</td><td>download.fastgit.org</td><td>480 分钟</td></tr><tr><td>GitHub Archive</td><td>archive.fastgit.org</td><td>无</td></tr></tbody></table><h2 id="Web-的使用"><a href="#Web-的使用" class="headerlink" title="Web 的使用"></a>Web 的使用</h2><p>使用时，把网址中的域名<code>github.com</code>换成<code>hub.fastgit.org</code>即可<br>对于常见的 GitHub Web 操作， FastGit 的基础节点也提供了最基本的支持。您可以直接访问包含有 Web 支持的节点。出于安全考虑，FastGithub会禁用包括 <code>Cookie</code> 以及 <code>Session</code> 等敏感权限。这意味着您不能登录进行操作。</p><h2 id="Release-和源码存档的下载"><a href="#Release-和源码存档的下载" class="headerlink" title="Release 和源码存档的下载"></a>Release 和源码存档的下载</h2><p>对于正常的 clone ， push 操作，FastGit 已经提供了相当完善的操作。对于 Release 和源码存档的下载<br>使用时把<code>github.com</code>换成<code>hub.fastgit.org</code>或<code>download.fastgit.org</code>即可</p><figure class="highlight text"><figcaption><span>使用例子</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Release</span><br><span class="line"># 假设下载链接为 https://github.com/A/A/releases/download/1.0/1.0.tar.gz</span><br><span class="line">wget https://download.fastgit.org/A/A/releases/download/1.0/1.0.tar.gz</span><br><span class="line"></span><br><span class="line"># Codeload</span><br><span class="line"># 假设下载链接为 https://hub.fastgit.org/A/A/archive/master.zip</span><br><span class="line"># 或者 https://codeload.github.com/A/A/zip/master</span><br><span class="line">wget https://download.fastgit.org/A/A/archive/master.zip</span><br></pre></td></tr></table></figure><h2 id="SSH-操作"><a href="#SSH-操作" class="headerlink" title="SSH 操作"></a>SSH 操作</h2><p>SSH 克隆地址为 <code>ssh.fastgit.org</code><br>使用时，只需要换成此域名即可</p><h2 id="对于-raw-的代理"><a href="#对于-raw-的代理" class="headerlink" title="对于 raw 的代理"></a>对于 raw 的代理</h2><p>FastGithub同样对 <code>https://raw.githubusercontent.com/</code> 进行了代理，地址为 <code>https://raw.fastgit.org/</code><br>使用时，只需要换成此域名即可</p><h1 id="安全性说明"><a href="#安全性说明" class="headerlink" title="安全性说明"></a>安全性说明</h1><p>FastGithub为每台不同的主机生成自颁发CA证书，保存在cacert文件夹下。客户端设备需要安装和无条件信任自颁发的CA证书，请不要将证书私钥泄露给他人，以免造成损失。</p><h1 id="合法性说明"><a href="#合法性说明" class="headerlink" title="合法性说明"></a>合法性说明</h1><p>《国际联网暂行规定》第六条规定：“计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。” FastGithub本地代理使用的都是“公用电信网提供的国际出入口信道”，从国外Github服务器到国内用户电脑上FastGithub程序的流量，使用的是正常流量通道，其间未对流量进行任何额外加密（仅有网页原有的TLS加密，区别于VPN的流量加密），而FastGithub获取到网页数据之后发生的整个代理过程完全在国内，不再适用国际互联网相关之规定</p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BOINC | 设备多余算力的利用</title>
      <link href="//post/6a8c71c51db3.html"/>
      <url>//post/6a8c71c51db3.html</url>
      
        <content type="html"><![CDATA[<p>BOINC 是 Berkeley Open Infrastructure for Network Computing 的首字母缩写，即伯克利开放式网络计算平台，是用于志愿计算和网格计算的开放的中间件系统</p><p>这种分布式的计算方式有利于志愿者们更为方便地参与到科学研究中去</p><p>简单来说，我们可以直接利用 BOINC 来对设备的空闲算力来对人类科学作出贡献</p><span id="more"></span><div class="note danger flat"><p>BOINC 是一个志愿计算的公益平台，你不会得到任何物质上的报酬。如果你仅是图利，那么请绕道。</p></div><details class="toggle" ><summary class="toggle-button" style="">Github 开源地址</summary><div class="toggle-content"><p><a href="https://github.com/termux/termux-app"><img src="https://github-readme-stats.vercel.app/api/pin/?username=BOINC&repo=boinc&show_owner=true" alt="boinc"></a><br><a href="https://github.com/BOINC/boinc">https://github.com/BOINC/boinc</a></p></div></details><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>BOINC 的分布式计算是将该一个计算分解成许多小的部分，分配给多台志愿者的计算机进行处理。这样可以节约整体计算时间，大大提高计算效率。<br>就好比原本一个人做的事情（集中式计算），现在多个人一起做（分布式计算），速度也就快了。</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>打开 <a href="http://boinc.berkeley.edu/download.php">http://boinc.berkeley.edu/download.php</a> 选择对应的操作系统，下载并安装，即可</p><h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><h2 id="流行的项目"><a href="#流行的项目" class="headerlink" title="流行的项目"></a>流行的项目</h2><p><a href="https://setiathome.berkeley.edu/">SETI@home</a> 寻找外星文明<br><a href="https://einsteinathome.org/">Einstein@Home</a> 寻找引力波证据<br><a href="https://www.worldcommunitygrid.org/">World Community Grid</a> 世界公共网格<br><a href="https://www.climateprediction.net/">Climateprediction.net</a> 预测地球气候<br><a href="https://boinc.bakerlab.org/">Rosetta@home</a> 蛋白质结构预测<br><a href="https://lhcathome.web.cern.ch/">LHC@home</a> 开发和利用粒子对撞机<br><a href="https://milkyway.cs.rpi.edu/milkyway/">MilkyWay@home</a> 构建银河系三维动态模型<br><a href="https://boinc.berkeley.edu/projects.php">更多项目…</a></p><h2 id="加入项目"><a href="#加入项目" class="headerlink" title="加入项目"></a>加入项目</h2><p>BOINC 只是计算平台，该平台的各个计算项目的服务器和运行数据都是各个项目方<strong>独立维护</strong>的，因此，对于您要加入的每个项目，您都需要<strong>分别</strong>进行注册对于任何一个项目，您可以在<strong>多台设备</strong>上使用这个项目的同一个帐户进行计算</p><div class="note info flat"><p>建议在所有的项目中都使用相同的注册信息，方便管理</p></div><div class="note default flat"><p>目前能在Android系统上跑的只有以下项目：Enigma@Home、Milkyway@Home、OProject@Home（按照fmjmath的代码分析，程序几乎不干活，因此不耗电）、Primegrid、SubsetSum@Home、WUProp@Home、yoyo@home，其他项目虽然能加入，但没有任务可以跑</p></div><p>更多内容 敬请期待</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分布式计算 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原子弹制作从入门到精通</title>
      <link href="//post/6f0601115267.html"/>
      <url>//post/6f0601115267.html</url>
      
        <content type="html"><![CDATA[<p>原子弹的理论本身其实很简单：只要你拿到两堆正确的物质（通常是铀235或钚），然后把它们「紧紧地」放在一起，这样维持一段足够长的时间，其它的事情就不必我们操心了，原子弹爆炸的好戏会自然上演。这篇文章的目的，就是告诉你怎样在家里做原子弹。 </p><span id="more"></span><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>我们大约需要30磅的铀235，体积差不多有一个棒球的大小， 再配合一些很容易到手的材料，这种炸弹就能使$\frac{1}{3}$哩以内任何东西化为乌有；2&#x2F;3哩以内的东西严重受损；在1.25哩半径内的人都会受到致命的辐射线；放射性烟尘随风飘扬，能使40哩内的人都致病。如果它在纽约市引爆，大概有25万人会死亡，还有40万人会受伤。这种效果恐怖分子应该会很满意；这种原子弹甚至在战场上也都能派上用场。不过，要提醒各位：铀235的分量不要超过45磅，因为对这样多的铀，其引爆的技巧在掌握上相当困难，单凭业余的机械工匠，大概是无法适时且有效地把这些东西凑在一起。挺有可能你还没做一半，它就在你面前爆炸了，那可就真浪费感情。我个人的偏好是用36磅或37磅的铀235，因为这样效果不差，而且，如果设计上出点小差错，也不致有太严重的后果。一旦把足够的材料紧聚在一起，亟待我们解决的最棘手的问题就是得使它们能紧聚在一起维持约半秒钟，这半秒钟的延迟就是技术上最主要的瓶颈。原因是这样的：当这两堆物质靠太近时，会发生剧烈的反应而产生大量的能量，在瞬间（比一秒钟小很多）迫使这两堆物质分开。这样的结果和爆竹的效果差不多，几百英尺外的人根本不知道有这回事。对一个稍有「自尊」的恐怖分子而言，是不会以此为满足的，对吗？所以，当务之急就是要设计出一套办法，使两堆铀235能聚得久一点，好让一些比较惊人的「大事」发生。 如果你这位恐怖分子有栋两层楼房（含地下室）、两根火药、15包水泥、20立方码的沙石，那么大约只要一个周就可以完工了。全部的费用，除去房租不算，大概只要3，000美元就够了。根据当前汇率，折合成人民币大概就是25000元。最后的问题是怎样把铀235或钚弄到手，这留待后面再谈。 </p><h1 id="开始动工"><a href="#开始动工" class="headerlink" title="开始动工"></a>开始动工</h1><p>准备妥当后，第一件事就是把分批弄来的铀235分成二等分，用一对半球容器装起来，你或可用乙炔喷灯（AcetyleneTorch）来作。铀的熔点是414.2℃，而乙炔喷灯的燃点是526.4℃，因此理 论上来说，乙炔喷灯足以熔化铀235。也许你应该用几十块耐火砖搭个窑，配上一个风箱，效果会比较好；不过如果你有耐心再加上一些运气（因为铀这东西燃烧会爆炸），乙炔喷灯应该是够用的了。 铀熔成液体后，流到半球状的洼槽（制陶瓷用的耐火泥就可派上用场），则第一个半球型作好冷却了，再移开作第二个。有件事要注意：这时候，在这区域附近不能有人。因为，铀有对人不利的特性。如果铀熔化时你就在现场，那么，你总会吸进一点，嘿嘿……其结果不是说你会少活几年，而是你只剩下几个钟头好活了！如果你这个恐怖分子确能置个人生死于度外，那当然就不必计较这些了，否则我建议你采用自动控制装置。当铀熔化时，和它相隔50英尺，再用5吨铅隔离，这样应该足够安全了。将铀235分成两堆的工作完成后，你就应分别用铅箱把铀装好。再从二楼挖个洞通到地下室，用一对黑铁管联接起来，使总长约20英尺左右。若能用6英寸厚的水泥敷于管外可能稍好，不过如果地板够坚实，而且房子是建在岩石上，也可以不必这么麻烦。在放下管子之前，先把装铀的半球形容器的平面朝上放在水泥上，再把管子放置妥当，原子弹就已完工一半了。为了不使铀散逸，地下室应该用沙、石、水泥和水混合填好，但因为这只要用一次就达到目的了，做得好不好看也无所谓啦。真正要注意的是，管子外面有足够的阻挡力量，使原子弹在爆炸前铀不致漏出。其实只要半液体状的沙泥混合物，就足以担当大任了。如此这般，原子弹的接收部分就完工了。引爆部分比较难做，构想之一是将另一个半球容器放在管子的上端，引爆时，让它倒向下面的接收部分就可以了。原理上虽很简单，但有些技术上的困难不易解决，比如说，如果引爆用的半球容器放歪了一点，它就会沿着管子滑下来，这样你想成为恐怖分子的美梦就落空了，因为这种死法不会让人觉得恐怖，只会成为茶余饭后的笑料罢了。目前可能最简单而有效的设计，是把一个细线织成的罩子（就像夏天防苍蝇的那种），放在管子的上端，再塞进管内，留约3～4英寸在外面；这时再把另一段4英尺长的管子焊在原来的管子上。若要使连接的部分更牢，可以在此部分钻几个洞，把铁钉插进去。然后拿3英尺长的2.5英寸铜管，里面装熔化的铅，将引爆的半球容器安在铅底座中一个吻合的凹槽里；另一根铁棍则凿入管子的另一端约一英尺，这装置总重量是80～85磅。 最后，把有螺纹的盖子套在管子上头，等到它能旋得松紧自如时，再将它拿下来，在它上面钻一个洞，使能容得下引爆的装置杆；装置杆则留 下6～8英寸长露出洞口，杆上并恰留钻一个钉孔。将各种大小不同的钉子试着去配合，最恰当的大小是能合于整个引爆装置（当然，试着配合时暂不在接受管上端作，以免危险）。然后，将 TNT 或炸药涂在一个碟子上（最好是咖啡壶中过滤器的底座），再塞进去，并插进一两个雷管。这放在引爆装置杆的四周，再由一两条引线连出来到外面，然后把它旋紧，原子弹就大功告成了。剩下的工作只是把引线接到定时器上，再把下端的安全针拔掉，然后离开这城市，约12小时后，这城市就离开这个世界了。定时器一旦引爆，其力量足使另一个安全针脱落，引爆装置就掉到接收部分去，即使不考虑爆炸产生的加速度，光是重力就足使85磅的物体由20英尺高空掉下，产生$80^{10}$尔格&#x2F;秒的动能。把爆炸所产生的冲击力考虑进去，则接触点有$10^{12}$尔格&#x2F;秒的动能，可使两个半球容器接触的时间足够长，而产生令人满意的效果。 </p><h1 id="防辐设备"><a href="#防辐设备" class="headerlink" title="防辐设备"></a>防辐设备</h1><p>为了要将所有重要的步骤交代清楚，应该再将几个小问题说明一下。例如，前文曾经简略地谈到，用乙炔喷灯时要考虑铀有发火燃烧的可能性。其实，应该说整个机械操作都要在「乳状液槽」中进行。对不太熟悉机械技术操作的人而言，所谓乳状液就是一种看来像牛乳一样的液体，和油有许多相似之处，可是不会发火燃烧。这种乳状液在一般机械工厂供货商处都很容易买到，而且不会有人问：你买这种东西干什么？用了这种乳状液，可以使危险降到最低程度。事实上，若我们要溶解铀或对铀作机械处理，最好在纯氮的大气中才安全。可是如果你够小心，而且运气又好的话，那么也不必用这种极端安全的方法。 辐射的问题是比较麻烦的一点，镭的辐射量和重量成正比，但铀的辐射量和重量却是成指数关系（也是这种性质使它具有爆炸性）。因为每个半球所装的质量都超过了临界值的一半，所以和它们同在一间房子里非常地危险。只吸进去一点点含放射性尘埃的空气，就意味着你马上要离开这个世界。因此我建议所有的工作人员应有其它的氧气供应，每人口中含个氧气管或可解决这个问题。但要通盘解决辐射的问题可能比较麻烦，不过只要有决心，加上智能和运气，这问题还是可以克服的。 我还要建议采用一种用铅作成外壳而且有动力的轮椅，让操作员坐在里面可以安全地作业。上面只要开个小缝，用铅作的玻璃当窗户，操作员就可以看到外面。铅作的袖子和手套，可以用来作一些需要和铀碰触的机械动作。为了防止辐射外逸，整栋房子的墙壁、地板都需覆盖上一层铅；地下室的天花板也要加上一层铅板，以免接收部分产生辐射的问题。算起来起码要用上6～8吨的铅，以维持基本的安全问题。这么一来，又得多花工夫支撑地板，免得垮下来。这些工作都做好了，就可以开始动手制造原子弹。如果你想作一道「红烧兔子」大餐，打开食谱第一步就是要抓一只兔子来！同理，现在你也会问：「怎样把铀235弄到手？」（铀235通常比钚容易拿到。）其实，你只要平时注意看报纸，应该不难知道，核能发电厂里就有。只要由电厂里偷根控制棒出来，把它熔了，再把其中没有用的铀238分离出来就成了。 要潜入一个核子反应炉，说起来并不是什么太难的事，尤其大学校园中的核子反应炉，都只有些马马虎虎的安全设施。一般设施就是些带刺铁丝网围墙，门口站了一两个警卫。事前可以作出误闯的样子来几次投石问路，看看有没有什么电子安全装置，大概结果都是根本没有的。可是我们偷偷摸摸的潜进去并没有什么用，因为铀非常的重，不要讲是一个人，就算是一队人马开进去，也搬不到足够的分量出来。尤其这批恐怖分子又身着铅甲以防辐射，就更不管用了。依我之见，干脆偷辆卡车和拖车（要那种特重型的，就是运三峡电站转子的那种），干掉警卫，代以自己人，然后就直闯进去拿你要的东西，很干脆，效率又高。 不过，反应器都是装在一个镍铁合金的球状容器里，容器再浸在水中，通常，旁边会有千斤顶，以便修护时用，所以也可以顺便用来把整个反应炉心起出来放到卡车里。不过要注意一件事，搬动反应器时要拔出一些燃料棒，或是插进一些节制棒，否则你和整个反应器都要化为灰烬。建议你或可向当时被你挟持的人质请教这方面的技术，以便搬动炉心。此外，整个反应器重约50吨，加上拖车需要6英寸厚的铅板作防护，所以拖车如何拖动65吨的重量，还是颇伤脑筋的（所以前面要用特重型的拖车，要不然到了地，炉子也搬上车了，却发现拖不动，那不是面子都丢尽了）。或者，你觉得搬走整个反应器不切实际，也可以只带走约 1，200磅的备用燃料棒。不过千万也要带着石墨或铅，免得燃料棒因不断地反应生热而熔化了。如果你忘了这步骤，回家打开盖子，只会看到一堆熔化了的铀，而且四处散射，可能你当场就一命呜呼而遗笑万年。性命是小，这脸咱可丢不起，所以别忘记拿了1200磅的燃料棒之后，要和15000 磅的石墨或铅混合。反应器的铀大约含3％的铀235（自然界铀则只含0．5％的铀235），做原子弹的铀则需要87％的铀235，否则根本不爆炸。到手的1200磅燃料棒，可以提炼出所需要约 36 磅的铀235，不过要有耐心和经验去分离它。如果你自知无法全部把铀235分离出来，就得多弄点燃料棒。一般说来，以目前的技术，要达到每次增加纯度25％并没有什么问题，所以你最少要弄到4800磅的燃料棒，若能弄到8600磅最好。把这些加上去，你总共要带15万磅（75 吨）的东西。其次还要找个地方放这些东西，我建议你租间仓库，如用原来那两层楼的建筑来分离铀似乎不太实际，因为这 至少需要2万平方英尺的空间。 </p><h1 id="分离高招"><a href="#分离高招" class="headerlink" title="分离高招"></a>分离高招</h1><p>下面就要考虑用什么方法来分离铀235。对恐怖分子来说，气体扩散法是好方法之一，这也是早期制造原子弹时所采用的——不仅可靠又不是太复杂的技术。不过花费较多，而且所耗的化学药品更是吓人。首先，你要有约12哩长的特殊玻璃线钢管，并以60吨的氢氟酸（ＨＦ）形成六氟化铀，然后吹向一具有特殊小孔的膜。因为六氟化铀238较重，在经过这层膜时会被陷住而不易透过。每过一次可使铀235的成分增加0.5％，如此程序只要反复操作，所得六氟化铀235的成分就愈大，最后只要把六氟化铀中的氟分离出来就行了。因为氢氟酸很贵，而且不易取得所以最好是去偷一点来，要不然就先去偷个几百万美金也行。 如果你觉得此路不通，还有其它的办法。你可以在树林里建个滋生反应器 （BreederReactor），用铀来作钚，再用化学上的技术分离即可。至于如何建滋生反应器，也不是难事，随便一本大学教科书，都可以告诉你好几种方法。虽然在理论上没有困难，但是也有它实际上的难处。不过如果你刚好有私人用的小河，又有几火车的钠，数量可观的不锈钢管，一百亩与外界隔离的土地，那就没有间题。 如果对这两种方法你都没有兴趣，还有一些有趣的新技术可供参考。你可以先用一块低温磁铁（CryogenicMagnet），它在液态氦的温度（约零下270℃）下能保持20，000高斯的磁场……不过，唔，不过下面的程序太复杂了……还有一法是用镭射，因为铀238较重，被激光束照射后， 运动的偏离角比铀235小。所以若在和镭射光垂直的平面上洒上一层铀，则铀235、铀238可藉其偏离角来分离。此法原理上简单可行，但时间上太慢。一天大概只能处理20磅的铀（含235和238），而分离的效率约12.5％，每处理一次可以产生约10％的铀235，所以要处理8次才能达到原子弹的标准。如此算来，从8600磅磅的燃料棒中分离出36磅纯度87％的铀235，约需费时四年。然而，它的辐射量又使你根本没有四年好活，所以还得找三两个志愿者来完成你的未竟之志。</p><p>因此，若能有愚公移山之志，或可成功 ，祝你好运！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 转载 </tag>
            
            <tag> 不正经的知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux使用教程</title>
      <link href="//post/4f62bd14da3c.html"/>
      <url>//post/4f62bd14da3c.html</url>
      
        <content type="html"><![CDATA[<p>Termux作为一个模拟终端，你可以在上面做很多事情，甚至是装几个Linux系统，跑网站服务器，等等，都可以做到。<br>这里记录了一些Termux的部分使用方法，欢迎阅读</p><details class="toggle" ><summary class="toggle-button" style="">Github 开源地址</summary><div class="toggle-content"><p><a href="https://github.com/termux/termux-app"><img src="https://github-readme-stats.vercel.app/api/pin/?username=termux&repo=termux-app&show_owner=true" alt="termux-app"></a><br><a href="https://github.com/termux/termux-app">https://github.com/termux/termux-app</a></p></div></details><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Termux 是一个Android平台上一个终端模拟器，在 Github 上开源</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><div class="note default simple"><p>最新版本系统要求<br>Android 7 ~ more<br>CPU: AArch64,ARM,i686, x86_64<br>至少 300 MB 的磁盘空间</p></div><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>Android7及以上可以使用最新版<br>Android5,6请使用2020年1月1日的<a href="https://www.reddit.com/r/termux/comments/dnzdbs/end_of_android56_support_on_20200101/">v0.83</a>版本</p><div class="note warning flat"><p>不同的下载来源的安装包签名不一样，所以之后更新时，需要在和之前同一个下载源下载</p></div><div class="note info flat"><p>GooglePlay下载源因为<a href="https://github.com/termux/termux-packages/wiki/Termux-and-Android-10">Android10问题</a>而不再更新</p></div><h3 id="F-Droid"><a href="#F-Droid" class="headerlink" title="F-Droid"></a>F-Droid</h3><p>下载地址 <a href="https://f-droid.org/packages/com.termux/">f-droid.org&#x2F;packages&#x2F;com.termux&#x2F;</a><br>更新通常会比Github慢几天(长则几周)</p><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>该下载源更新频率最高，而且也是最新的<br>Github Releases(稳定版) <a href="https://github.com/termux/termux-app/releases">github.com&#x2F;termux&#x2F;termux-app&#x2F;releases</a><br>Github Build(测试版) <a href="https://github.com/termux/termux-app/actions/workflows/debug_build.yml">github.com&#x2F;termux&#x2F;termux-app&#x2F;actions&#x2F;workflows&#x2F;debug_build.yml</a></p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>第一次启动Termux的时候需要从远程服务器加载数据，然而可能会遇到这种问题：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Ubable to install</span><br><span class="line">Termux was unable to install the bootstrap packages.</span><br><span class="line">Check your network connection and try again.</span><br></pre></td></tr></table></figure><p>目前解决方法有两种：</p><ol><li>VPN 全局代理 （成功率很高）</li><li>如果你是 WiFi 的话尝试切换到运营商流量 （有一定成功率）</li></ol><h1 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h1><ul><li>缩放文本 可以使用缩放手势来调整其字体大小</li><li>长按屏幕 长按屏幕会调出显示菜单项（包括复制、粘贴、更多）</li><li>会话管理 显示隐藏式导航栏，可以新建、切换、重命名会话 session 和调用弹出输入法</li><li>常用按键 (打开方式: 右滑打开会话管理再长按<code>KEYBOARD</code>) 常用键如: ESC键、Tab 键、CTR 键、ALT 键，有了这些按键后可以提高我们日常操作的效率</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">长按屏幕</span><br><span class="line">├── COPY    复制</span><br><span class="line">├── PASTE   粘贴</span><br><span class="line">├── More    更多</span><br><span class="line">   ├── Select URL             提取屏幕所有网址</span><br><span class="line">   └── Share transcipt        分享命令脚本</span><br><span class="line">   └── Reset                  重置</span><br><span class="line">   └── Kill process           杀掉当前会话进程</span><br><span class="line">   └── Style                   Termux提供的主题(需安装插件)</span><br><span class="line">      └── CHOICE COLOR                   选择配色</span><br><span class="line">      └── CHOICE FONT                   选择字体</span><br><span class="line">   └── Keep screen on:         # 保持屏幕常亮</span><br><span class="line">   └── Help:                   # 帮助文档</span><br></pre></td></tr></table></figure><p>使用 <code>More-Style</code> 需插件<a href="#Termux:Styling">Termux:Styling</a></p><h2 id="快捷键表"><a href="#快捷键表" class="headerlink" title="快捷键表"></a>快捷键表</h2><ul><li><kbd>Ctrl</kbd> + <kbd>A</kbd> -&gt; 将光标移动到行首</li><li><kbd>Ctrl</kbd> + <kbd>C</kbd> -&gt; 中止当前进程</li><li><kbd>Ctrl</kbd> + <kbd>D</kbd> -&gt; 注销终端会话</li><li><kbd>Ctrl</kbd> + <kbd>E</kbd> -&gt; 将光标移动到行尾</li><li><kbd>Ctrl</kbd> + <kbd>K</kbd> -&gt; 从光标删除到行尾</li><li><kbd>Ctrl</kbd> + <kbd>U</kbd> -&gt; 从光标删除到行首</li><li><kbd>Ctrl</kbd> + <kbd>L</kbd> -&gt; 清除终端</li><li><kbd>Ctrl</kbd> + <kbd>Z</kbd> -&gt; 挂起（发送SIGTSTP到）当前进程</li></ul><h2 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h2><p>Termux 可直接用的就已经有 <code>apt, apt-cache, apt-get, dpkg, pkg</code> 这几种<br>不过还是建议大家使用 pkg 命令，因为 pkg 命令每次安装的时候自动执行 apt update 命令，还是比较方便的</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>要想使用体验好，进阶配置少不了</p><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p>使用 <code>pkg update</code> 更新一下的时候发现默认源网速有点慢，因为默认源是在国外，数据要跑长途。解决办法也是有的，把源换成国内，速度肉眼可见的提升。</p><article class="message is-danger"><div class="message-body"><p>清华镜像仅适用于 Android 7.0 (API 24) 及以上版本，旧版本系统使用此镜像可能导致程序错误。</p></div></article><h3 id="方法一-图形界面-TUI-替换-推荐"><a href="#方法一-图形界面-TUI-替换-推荐" class="headerlink" title="方法一: 图形界面(TUI)替换 (推荐)"></a>方法一: 图形界面(TUI)替换 (推荐)</h3><p>在较新版的 Termux 中，官方提供了图形界面（TUI）来半自动替换镜像，推荐使用该种方式以规避其他风险。 在 Termux 中执行如下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-change-repo</span><br></pre></td></tr></table></figure><p>在图形界面引导下，使用自带方向键可上下移动<br>第一步使用空格选择需要更换的仓库，之后在第二步选择你要选择的镜像源。确认无误后回车，镜像源会自动完成更换</p><p>这里支持的国内镜像源 Tsinghua BFSU NJU USTC </p><h3 id="方法二-命令行替换"><a href="#方法二-命令行替换" class="headerlink" title="方法二: 命令行替换"></a>方法二: 命令行替换</h3><p>使用如下命令行替换官方源为 TUNA 镜像源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#x27; $PREFIX/etc/apt/sources.list</span><br><span class="line">sed -i &#x27;s@^\(deb.*games stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&#x27; $PREFIX/etc/apt/sources.list.d/game.list</span><br><span class="line">sed -i &#x27;s@^\(deb.*science stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&#x27; $PREFIX/etc/apt/sources.list.d/science.list</span><br><span class="line">apt update &amp;&amp; apt upgrade</span><br></pre></td></tr></table></figure><h3 id="方法三-手动修改"><a href="#方法三-手动修改" class="headerlink" title="方法三: 手动修改"></a>方法三: 手动修改</h3><p>编辑 <code>$PREFIX/etc/apt/sources.list</code> 添加或修改为如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">The termux repository mirror from TUNA:</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main</span><br></pre></td></tr></table></figure><p>编辑 <code>$PREFIX/etc/apt/sources.list.d/science.list</code> 修改为如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">The termux repository mirror from TUNA:</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable</span><br></pre></td></tr></table></figure><p>编辑 <code>$PREFIX/etc/apt/sources.list.d/game.list</code> 修改为如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">The termux repository mirror from TUNA:</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable</span><br></pre></td></tr></table></figure><p>请使用内置或安装在 Termux 里的文本编辑器，例如 <code>vi</code> &#x2F; <code>vim</code> &#x2F; <code>nano</code> 等，尽量不要使用 RE 管理器等其他具有 ROOT 权限的外部 APP 来修改 Termux 的文件</p><h2 id="定制快捷按键"><a href="#定制快捷按键" class="headerlink" title="定制快捷按键"></a>定制快捷按键</h2><p>在 Termux 中，可以通过修改 <code>~/.termux/termux.properties</code> 文件里的内容来定制快捷按键，达到更好的效率</p><p>这里用<strong>nano</strong>编辑器示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.termux/termux.properties</span><br></pre></td></tr></table></figure><p>内容为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">extra-keys = [ \</span><br><span class="line">    [&#x27;ESC&#x27;,&#x27;&lt;&#x27;,&#x27;&gt;&#x27;,&#x27;BACKSLASH&#x27;,&#x27;=&#x27;,&#x27;^&#x27;,&#x27;$&#x27;,&#x27;()&#x27;,&#x27;&#123;&#125;&#x27;,&#x27;[]&#x27;,&#x27;ENTER&#x27;], \</span><br><span class="line">    [&#x27;TAB&#x27;,&#x27;&amp;&#x27;,&#x27;;&#x27;,&#x27;/&#x27;,&#x27;~&#x27;,&#x27;%&#x27;,&#x27;*&#x27;,&#x27;HOME&#x27;,&#x27;UP&#x27;,&#x27;END&#x27;,&#x27;PGUP&#x27;], \</span><br><span class="line">    [&#x27;CTRL&#x27;,&#x27;FN&#x27;,&#x27;ALT&#x27;,&#x27;|&#x27;,&#x27;-&#x27;,&#x27;+&#x27;,&#x27;QUOTE&#x27;,&#x27;LEFT&#x27;,&#x27;DOWN&#x27;,&#x27;RIGHT&#x27;,&#x27;PGDN&#x27;] \</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p>如需修改 可以参照以下按键列表<br>修改完后，需重启 Termux 生效</p><div class="note danger flat"><p>下表列出的三个<strong>特殊键</strong>中的每一个最多只能在附加键定义中列出一次，超过次数将会报错</p></div><table><thead><tr><th>按键</th><th>说明</th></tr></thead><tbody><tr><td>CTRL</td><td>特殊按键</td></tr><tr><td>ALT</td><td>特殊按键</td></tr><tr><td>FN</td><td>特殊按键</td></tr><tr><td>ESC</td><td>退出键</td></tr><tr><td>TAB</td><td>表格键</td></tr><tr><td>HOME</td><td>起始键</td></tr><tr><td>END</td><td>结尾键</td></tr><tr><td>PGUP</td><td>上翻页键</td></tr><tr><td>PGDN</td><td>下翻页键</td></tr><tr><td>INS</td><td>插入键</td></tr><tr><td>DEL</td><td>删除键</td></tr><tr><td>BKSP</td><td>退格键</td></tr><tr><td>UP</td><td>方向键 上</td></tr><tr><td>LEFT</td><td>方向键 左</td></tr><tr><td>RIGHT</td><td>方向键 右</td></tr><tr><td>DOWN</td><td>方向键 下</td></tr><tr><td>ENTER</td><td>回车</td></tr><tr><td>BACKSLASH</td><td>反斜杠 \</td></tr><tr><td>QUOTE</td><td>双引号键</td></tr><tr><td>APOSTROPHE</td><td>单引号键</td></tr><tr><td>F1-F12</td><td>F1至F12按键</td></tr></tbody></table><h2 id="终端配色方案"><a href="#终端配色方案" class="headerlink" title="终端配色方案"></a>终端配色方案</h2><p><strong>项目地址: <a href="https://github.com/Cabbagec/termux-ohmyzsh/">Github:Cabbagec&#x2F;termux-ohmyzsh</a></strong></p><p>该脚本主要使用了zsh来替代bash作为默认 shell，并且支持色彩和字体样式，同时也激活了外置存储，可以直接访问SD卡下的目录。主题默认为 agnoster，颜色样式默认为 Tango，字体默认为 Ubuntu。</p><blockquote><p>执行下面这个命令确保已经安装好了 curl 命令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://fastly.jsdelivr.net/gh/Cabbagec/termux-ohmyzsh/install.sh)&quot;</span><br></pre></td></tr></table></figure><details class="toggle" ><summary class="toggle-button" style="">备用命令</summary><div class="toggle-content"><p>此命令为官方提供命令 但没有CDN加速 不推荐</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&quot;</span><br></pre></td></tr></table></figure></div></details><blockquote><p>配置过程中有部分下载内容可能翻墙 请配置前开启科学上网工具</p></blockquote><p>Android6.0 以上会弹框确认是否授权访问文件，点击<code>始终允许</code>授权后 Termux 可以方便的访问SD卡文件<br>安卓 App 默认只能访问自己的数据，如果要访问手机的存储，需要请求权限，如果你刚刚不小心点了拒绝的话，那么可以执行以下命令来重新获取访问权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-setup-storage</span><br></pre></td></tr></table></figure><p>脚本执行时先后有如下两个选项，如果不会选直接回车即可<br>如果想要继续更改配色方案的话，可以根据下面命令来更改对应的色彩配色方案：<br><strong>设置色彩样式</strong>:<br>输入<code>chcolor</code>命令更换色彩样式，或者执行<code>~/.termux/colors.sh</code>命令<br><strong>设置字体</strong>:<br>运行<code>chfont</code>命令更换字体，或者执行<code>~/.termux/fonts.sh</code>命令</p><h2 id="zsh主题-Powerlevel10k"><a href="#zsh主题-Powerlevel10k" class="headerlink" title="zsh主题-Powerlevel10k"></a>zsh主题-Powerlevel10k</h2><p><strong>项目地址: <a href="https://github.com/romkatv/powerlevel10k">Github:romkatv&#x2F;powerlevel10k</a></strong></p><p><img src="https://s2.loli.net/2022/01/29/M8k5l4dZyKPoHCp.png" alt="prompt-styles-high-contrast.png"></p><p>自带的主题看腻了？不好看？不实用？不便捷？或许，我推荐的这款主题–Powerlevel10k就是个不错的选择。</p><ol><li>安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k</span><br></pre></td></tr></table></figure></li></ol><ul><li>中国大陆用户可以使用下面的官方镜像加速下载<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li><p>打开 <code>~/.zshrc</code> 将里面的 <code>ZSH_THEME</code> 值更改为 <code>powerlevel10k/powerlevel10k</code></p></li><li><p>然后重新打开 Termux 来开始主题初始化配置</p></li></ol><p>配置成功后，你可以使用 <code>p10k configure</code> 或者 <code>直接修改配置文件</code> 来更改配置(覆盖旧配置)</p><h2 id="修改启动问候语"><a href="#修改启动问候语" class="headerlink" title="修改启动问候语"></a>修改启动问候语</h2><p>这个启动问候语在前期对于初学者有一定的帮助，但是随着你们 Termux 的熟悉，这个默认的问候语就会显得比较臃肿。编辑问候语文件(<code>$PREFIX/etc/motd</code>)可以直接修改启动显示的问候语</p><blockquote><p>使用的编辑器以nano为例</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano $PREFIX/etc/motd</span><br></pre></td></tr></table></figure><p>比如你可以添加个酷炫的ASCII字符画</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> _____                              </span><br><span class="line">|_   _|__ _ __ _ __ ___  _   ___  __</span><br><span class="line">  | |/ _ \ &#x27;__| &#x27;_ ` _ \| | | \ \/ /</span><br><span class="line">  | |  __/ |  | | | | | | |_| |&gt;  &lt; </span><br><span class="line">  |_|\___|_|  |_| |_| |_|\__,_/_/\_\</span><br></pre></td></tr></table></figure><h1 id="Termux插件"><a href="#Termux插件" class="headerlink" title="Termux插件"></a>Termux插件</h1><p>Termux 官方提供了一些额外的有趣的功能，我们可以通过安装插件(apk)的方式使用这些功能</p><div class="note warning flat"><p>请勿在 <code>不同下载源</code> 之间混合安装 Termux 和 插件</p></div><h2 id="Termux-API"><a href="#Termux-API" class="headerlink" title="Termux:API"></a>Termux:API</h2><p>可用于访问手机硬件实现更多的功能</p><ul><li><a href="https://f-droid.org/packages/com.termux.api/">Termux:API F-Droid 下载地址</a></li><li><a href="https://github.com/termux/termux-api/releases">Termux:API Github 下载地址</a></li></ul><p>安装完软件后，还需在 <code>Termux</code> 软件内安装对应的包才能使用 <code>Termux:API</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install termux-api</span><br></pre></td></tr></table></figure><h2 id="Termux-Boot"><a href="#Termux-Boot" class="headerlink" title="Termux:Boot"></a>Termux:Boot</h2><p>用于将自定义命令开机自启使用</p><ul><li><a href="https://f-droid.org/packages/com.termux.boot/">Termux:Boot F-Droid 下载地址</a></li><li><a href="https://github.com/termux/termux-boot/releases">Termux:Boot Github 下载地址</a></li></ul><p>安装完成启动这个应用程序后，创建 <code>~/.termux/boot/</code> 目录，将需要开机自启的脚本放在这个目录下面，如果有多个文件的话，将他们按照排序顺序执行，如果要确保设备进入睡眠状态，建议脚本前面先运行 <code>termux-wake-lock</code>  命令</p><h2 id="Termux-Float"><a href="#Termux-Float" class="headerlink" title="Termux:Float"></a>Termux:Float</h2><p>可以将 Termux 悬浮窗形式显示</p><ul><li><a href="https://f-droid.org/packages/com.termux.window/">Termux:Float F-Droid 下载地址</a></li><li><a href="https://github.com/termux/termux-float/releases">Termux:Float Github 下载地址</a></li></ul><h2 id="Termux-Styling"><a href="#Termux-Styling" class="headerlink" title="Termux:Styling"></a>Termux:Styling</h2><p>终端的一些美化方案(不推荐安装.会把zsh主题搞乱)</p><ul><li><a href="https://f-droid.org/packages/com.termux.styling/">Termux:Styling F-Droid 下载地址</a></li><li><a href="https://github.com/termux/termux-styling/releases">Termux:Styling Github 下载地址</a></li></ul><h2 id="Termux-Tasker"><a href="#Termux-Tasker" class="headerlink" title="Termux:Tasker"></a>Termux:Tasker</h2><p>从Tasker或其它兼容软件中调用Termux可执行文件的简单方法</p><ul><li><a href="https://f-droid.org/en/packages/com.termux.tasker/">Termux:Tasker F-Droid 下载地址</a></li><li><a href="https://github.com/termux/termux-tasker/releases">Termux:Tasker Github 下载地址</a></li></ul><h2 id="Termux-Widget"><a href="#Termux-Widget" class="headerlink" title="Termux:Widget"></a>Termux:Widget</h2><p>添加一些安卓小部件</p><ul><li><a href="https://f-droid.org/packages/com.termux.widget/">Termux:Widget F-Droid 下载地址</a></li><li><a href="https://github.com/termux/termux-widget/releases">Termux:API Github 下载地址</a></li></ul><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>本教程到此结束。你的Termux已大成雏形，你可以使用Termux开跑网站，写代码。更多功能期待着你去探索！</p><hr><p>文章部分参考 <a href="https://www.sqlsec.com/2018/05/termux.html">Termux 高级终端安装使用配置教程</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>User-Agent 中的 Mozilla</title>
      <link href="//post/bda06570fc30.html"/>
      <url>//post/bda06570fc30.html</url>
      
        <content type="html"><![CDATA[<p>User-Agent 即用户代理，简称“UA”，它是一个特殊字符串头。网站服务器通过识别 “UA”来确定用户所使用的操作系统版本、CPU 类型、浏览器版本等信息。. 而网站服务器则通过判断 UA 来给客户端发送不同的页面。但你有没有产生这个疑问，为什么每个 User-Agent 都有 Mozilla 字样？</p><span id="more"></span><p>先来几个目前常见的浏览器 User-Agent </p><div class="tabs" id="expview"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#expview-1"><i class="fab fa-chrome"></i>Chrome</button></li><li class="tab"><button type="button" data-href="#expview-2"><i class="fab fa-firefox"></i>Firefox</button></li><li class="tab"><button type="button" data-href="#expview-3"><i class="fab fa-opera"></i>Opera</button></li><li class="tab"><button type="button" data-href="#expview-4"><i class="fab fa-safari"></i>Safari</button></li><li class="tab"><button type="button" data-href="#expview-5"><i class="fab fa-edge"></i>Edge</button></li><li class="tab"><button type="button" data-href="#expview-6"><i class="fab fa-internet-explorer"></i>IE11</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="expview-1"><p>Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;50.0.2661.87 Safari&#x2F;537.36</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="expview-2"><p>Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64; rv:46.0) Gecko&#x2F;20100101 Firefox&#x2F;46.0</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="expview-3"><p>Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;50.0.2661.87 Safari&#x2F;537.36 OPR&#x2F;37.0.2178.32</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="expview-4"><p>Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;534.57.2 (KHTML, like Gecko) Version&#x2F;5.1.7 Safari&#x2F;534.57.2</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="expview-5"><p>Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;46.0.2486.0 Safari&#x2F;537.36 Edge&#x2F;13.10586</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="expview-6"><p>Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64; Trident&#x2F;7.0; rv:11.0) like Gecko</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>从以上的浏览器 User-Agent 确实可以看去都带有 Mozilla ，那么为会这样呢？</p><p>故事还得从头说起，最初的主角叫 NCSA Mosaic ，简称 Mosaic（马赛克），是 1992 年末位于伊利诺伊大学厄巴纳-香槟分校的国家超级计算机应用中心（National Center for Supercomputing Applications，简称 NCSA）开发，并于 1993 年发布的一款浏览器。它自称 “NCSA_Mosaic&#x2F;2.0（Windows 3.1）”，Mosaic 可以同时展示文字和图片，从此浏览器变得有趣多了。</p><p>然而很快就出现了另一个浏览器，这就是著名的 Mozilla ，中文名称摩斯拉。一说 Mozilla &#x3D; Mosaic + Killer，意为 Mosaic 杀手，也有说法是 Mozilla &#x3D; Mosaic &amp; Godzilla，意为马赛克和哥斯拉，而 Mozilla 最初的吉祥物是只绿色大蜥蜴，后来更改为红色暴龙，跟哥斯拉长得一样。</p><p>但 Mosaic 对此非常不高兴，于是后来 Mozilla 更名为 Netscape ，也就是网景。Netscape 自称 “Mozilla&#x2F;1.0(Win3.1)” ，事情开始变得更加有趣。网景支持框架（frame），由于大家的喜欢框架变得流行起来，但是 Mosaic 不支持框架，于是网站管理员探测 User-Agent ，对 Mozilla 浏览器发送含有框架的页面，对非 Mozilla 浏览器发送没有框架的页面。</p><p>后来网景拿微软寻开心，称微软的 Windows 是 “没有调试过的硬件驱动程序”。<span class="heimu">微软很生气后果很严重。</span>于是微软开发了自己的浏览器，这就是 Internet Explorer ，并希望它可以成为 Netscape Killer 。IE 同样支持框架，但它不是 Mozilla ，所以它总是收不到含有框架的页面。微软很郁闷很快就沉不住气了，它不想等到所有的网站管理员都了解 Internet Explorer 并且给 Internet Explorer 发送含有框架的页面，它选择宣布 IE 是兼容 Mozilla ，并且模仿 Netscape 称 Internet Explorer 为 “Mozilla&#x2F;1.22(compatible; MSIE 2.0; Windows 95)” ，于是 Internet Explorer 可以收到含有框架的页面了，所有微软的人都嗨皮了，但是网站管理员开始晕了。</p><p>因为微软将 Internet Explorer 和 Windows 捆绑销售，并且把 Internet Explorer 做得比 Netscape 更好，于是第一次浏览器血腥大战爆发了，结果是 Netscape 以失败退出历史舞台，微软更加嗨皮。但没想到 Netscape 居然又以 Mozilla 的名义重生了（为什么要用 “又”，因为在成立 Netscape 之前就是 Mozilla ，意为 Mosaic 杀手，当时的创立网络浏览模式的 Mosaic 对此非常不高兴，于是后来 Mozilla 更名为 Netscape，现在又绕回来了。 ），并且开发了 Gecko ，这次它自称为 “Mozilla&#x2F;5.0(Windows; U; Windows NT 5.0; en-US; rv:1.1) Gecko&#x2F;20020826”。</p><p>Gecko 是一款渲染引擎并且很出色。Mozilla 后来变成了现在我们熟知的 Firefox，并自称 “Mozilla&#x2F;5.0 (Windows; U; Windows NT 5.1; sv-SE; rv:1.7.5) Gecko&#x2F;20041108 Firefox&#x2F;1.0”。Firefox 性能很出色，Gecko 也开始攻城略地，其他新的浏览器使用了它的代码，并且将它们自己称为 “Mozilla&#x2F;5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7.2) Gecko&#x2F;20040825 Camino&#x2F;0.8.1”，以及 “Mozilla&#x2F;5.0 (Windows; U; Windows NT 5.1; de; rv:1.8.1.8) Gecko&#x2F;20071008 SeaMonkey&#x2F;1.0”，每一个都将自己装作 Mozilla ，而它们全都使用 Gecko 。</p><p>Gecko 很出色，而 Internet Explorer 完全跟不上它，因此 User-Agent 探测规则变了，使用 Gecko 的浏览器被发送了更好的代码，而其他浏览器则没有这种待遇。Linux 的追随者对此很难过，因为他们编写了 Konqueror ，它的引擎是 KHTML ，他们认为 KHTML 和 Gecko 一样出色，但却因为不是 Gecko 而得不到好的页面，于是 Konqueror 为得到更好的页面开始将自己伪装成 “like Gecko”，并自称为 “Mozilla&#x2F;5.0 (compatible; Konqueror&#x2F;3.2; FreeBSD) (KHTML, like Gecko)”。自此 User-Agent 变得更加混乱。</p><p>这时更有 Opera 跳出来说，“毫无疑问，我们应该让用户来决定他们想让我们伪装成哪个浏览器。” ，于是 Opera 干脆创建了菜单项让用户自主选择让 Opera 浏览器变成 “Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.51” ，或者 “Mozilla&#x2F;5.0 (Windows NT 6.0; U; en; rv:1.8.1) Gecko&#x2F;20061208 Firefox&#x2F;2.0.0 Opera 9.51” ， 或者 “Opera&#x2F;9.51 (Windows NT 5.1; U; en)” 。</p><p>后来苹果开发了 Safari 浏览器，并使用 KHTML 作为渲染引擎，但苹果加入了许多新的特性，于是苹果从 KHTML 另辟分支称之为 WebKit ，但它又不想抛弃那些为 KHTML 编写的页面，于是 Safari 自称为 “Mozilla&#x2F;5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit&#x2F;85.7 (KHTML, like Gecko) Safari&#x2F;85.5”，增加了 AppleWebKit&#x2F;… 字段，这进一步加剧了 User-Agent 的混乱局面。</p><p>因为微软十分忌惮 Firefox ，于是 Internet Explorer 重装上阵，这次它自称为 “Mozilla&#x2F;4.0 (compatible; MSIE 8.0; Windows NT 6.0) ”，并且渲染效果同样出色，但是需要网站管理员的指令它这么做才行。</p><p>再后来，谷歌开发了 Chrome 浏览器，Chrome 使用 Webkit 作为渲染引擎，和 Safari 之前一样，它想要那些为 Safari 编写的页面，于是它伪装成了 Safari 。于是 Chrome 使用 WebKit ，并将自己伪装成 Safari，WebKit 伪装成 KHTML ，KHTML 伪装成 Gecko ，最后所有的浏览器都伪装成了 Mozilla ，这就是为什么所有的浏览器 User-Agent 里都有 Mozilla 。Chrome 自称为 “Mozilla&#x2F;5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit&#x2F;525.13 (KHTML, like Gecko) Chrome&#x2F;0.2.149.27 Safari&#x2F;525.13”。</p><p>因为以上这段历史，现在的 User-Agent 字符串变得一团糟，几乎根本无法彰显它最初的意义。追根溯源，微软可以说是这一切的始作俑者，但后来每一个人都在试图假扮别人，最终把 User-Agent 搞得混乱不堪。</p><p>一句话结论：因为网站开发者可能会因为你是某浏览器（这里是 Mozilla），所以输出一些特殊功能的程序代码（这里指好的特殊功能），所以当其它浏览器也支持这种好功能时，就试图去模仿 Mozilla 浏览器让网站输出跟 Mozilla 一样的内容，而不是输出被阉割功能的程序代码。大家都为了让网站输出最好的内容，都试图假装自己是 Mozilla 一个已经不存在的浏览器……</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
